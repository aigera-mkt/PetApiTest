{"uid":"5f8635a794a73ba8","name":"test_pet_operations[790]","fullName":"PetApiTest#test_pet_operations","historyId":"dbe6029d73531e20a03ab6e4535f8309","time":{"start":1724390740875,"stop":1724390741204,"duration":329},"status":"failed","statusMessage":"AssertionError: assert 404 == 200\n +  where 404 = <Response [404]>.status_code","statusTrace":"pet_id = 790\n\n    @pytest.mark.parametrize(\"pet_id\", [897, 465, 790])\n    \n    def test_pet_operations(pet_id):\n    \n       # Add a new pet in the store\n    \n        data = {\n            \"name\": \"Test123\",\n            \"photoUrls\": [\n                \"strissdfvdsng\",\n                \"sdgvdg\"\n            ],\n            \"id\": 465,\n            \"category\": {\n                \"id\": 7967,\n                \"name\": \"egergeg\"\n            },\n            \"tags\": [\n                {\n                    \"id\": 678568,\n                    \"name\": \"fjgk\"\n                },\n                {\n                    \"id\": 235235,\n                    \"name\": \"vo8io\"\n                }\n            ],\n            \"status\": \"pending\"\n        }\n    \n        add_pet = requests.post(f'{base_url}/pet', json=data)\n        print('Add a new pet ' + add_pet.text)\n        print(add_pet.status_code)\n        print(add_pet.headers)\n    \n        assert add_pet.status_code == 200\n        assert add_pet.headers['Content-Type'] == 'application/json'\n    \n        #Update pet\n        update_data = {\n        \"name\": \"Test123\",\n        \"photoUrls\": [\n        \"strissdfvdsng\",\n        \"sdgvdg\"\n         ],\n        \"id\": 465,\n        \"category\": {\n        \"id\": 7967,\n        \"name\": \"egergeg\"\n        },\n        \"tags\": [\n        {\n          \"id\": 678568,\n          \"name\": \"fjgk\"\n        },\n        {\n          \"id\": 235235,\n          \"name\": \"vo8io\"\n        }\n        ],\n        \"status\": \"available\"\n        }\n    \n        update_pet=requests.put(f'{base_url}/pet', json=update_data)\n        print('Update pet info '+ update_pet.text)\n        print(update_pet.status_code)\n        print(update_pet.headers)\n    \n        assert update_pet.status_code == 200\n        assert update_pet.headers['Content-Type'] == 'application/json'\n    \n    \n        # Find pet by id\n        get_pet = requests.get(f'{base_url}/pet/{pet_id}')\n        print('Find pet by id '+ get_pet.text)\n        print(get_pet.status_code)\n        print(get_pet.headers)\n    \n>       assert get_pet.status_code==200\nE       assert 404 == 200\nE        +  where 404 = <Response [404]>.status_code\n\nPetApiTest.py:86: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 404 == 200\n +  where 404 = <Response [404]>.status_code","statusTrace":"pet_id = 790\n\n    @pytest.mark.parametrize(\"pet_id\", [897, 465, 790])\n    \n    def test_pet_operations(pet_id):\n    \n       # Add a new pet in the store\n    \n        data = {\n            \"name\": \"Test123\",\n            \"photoUrls\": [\n                \"strissdfvdsng\",\n                \"sdgvdg\"\n            ],\n            \"id\": 465,\n            \"category\": {\n                \"id\": 7967,\n                \"name\": \"egergeg\"\n            },\n            \"tags\": [\n                {\n                    \"id\": 678568,\n                    \"name\": \"fjgk\"\n                },\n                {\n                    \"id\": 235235,\n                    \"name\": \"vo8io\"\n                }\n            ],\n            \"status\": \"pending\"\n        }\n    \n        add_pet = requests.post(f'{base_url}/pet', json=data)\n        print('Add a new pet ' + add_pet.text)\n        print(add_pet.status_code)\n        print(add_pet.headers)\n    \n        assert add_pet.status_code == 200\n        assert add_pet.headers['Content-Type'] == 'application/json'\n    \n        #Update pet\n        update_data = {\n        \"name\": \"Test123\",\n        \"photoUrls\": [\n        \"strissdfvdsng\",\n        \"sdgvdg\"\n         ],\n        \"id\": 465,\n        \"category\": {\n        \"id\": 7967,\n        \"name\": \"egergeg\"\n        },\n        \"tags\": [\n        {\n          \"id\": 678568,\n          \"name\": \"fjgk\"\n        },\n        {\n          \"id\": 235235,\n          \"name\": \"vo8io\"\n        }\n        ],\n        \"status\": \"available\"\n        }\n    \n        update_pet=requests.put(f'{base_url}/pet', json=update_data)\n        print('Update pet info '+ update_pet.text)\n        print(update_pet.status_code)\n        print(update_pet.headers)\n    \n        assert update_pet.status_code == 200\n        assert update_pet.headers['Content-Type'] == 'application/json'\n    \n    \n        # Find pet by id\n        get_pet = requests.get(f'{base_url}/pet/{pet_id}')\n        print('Find pet by id '+ get_pet.text)\n        print(get_pet.status_code)\n        print(get_pet.headers)\n    \n>       assert get_pet.status_code==200\nE       assert 404 == 200\nE        +  where 404 = <Response [404]>.status_code\n\nPetApiTest.py:86: AssertionError","steps":[],"attachments":[{"uid":"5127a4dfe390e74b","name":"stdout","source":"5127a4dfe390e74b.txt","type":"text/plain","size":1515}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true},"afterStages":[],"labels":[{"name":"suite","value":"PetApiTest"},{"name":"host","value":"fv-az520-7"},{"name":"thread","value":"2114-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"PetApiTest"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"pet_id","value":"790"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"5f8635a794a73ba8.json","parameterValues":["790"]}